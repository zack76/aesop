{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\n\nclass BaseService {\n  get(url, params = null) {\n    // if (params) {\n    //     url += (url.indexOf('?') === -1 ? '?' : '&') + this.queryParams(params);\n    // }\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Access-Control-Allow-Methods': 'GET',\n        \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  }\n\n  queryParams(params) {\n    return Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n  }\n\n}\n\nconst baseService = new BaseService();\nexport default baseService;","map":{"version":3,"sources":["/Users/Zac/Zack/aesop-test/aesop/src/service/BaseService.js"],"names":["fetch","BaseService","get","url","params","method","headers","Accept","queryParams","Object","keys","map","k","encodeURIComponent","join","baseService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,IAAf,EAAqB;AACpB;AACA;AACA;AACA,WAAOJ,KAAK,CAACG,GAAD,EAAM;AACdE,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,mCADH;AAEL,wCAA+B,KAF1B;AAGL,wCAAgC,6EAH3B;AAIL,wBAAgB,gCAJX;AAKL,uCAA+B;AAL1B;AAFK,KAAN,CAAZ;AAUH;;AAEDC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,WAAOK,MAAM,CAACC,IAAP,CAAYN,MAAZ,EACFO,GADE,CACEC,CAAC,IAAIC,kBAAkB,CAACD,CAAD,CAAlB,GAAwB,GAAxB,GAA8BC,kBAAkB,CAACT,MAAM,CAACQ,CAAD,CAAP,CADvD,EAEFE,IAFE,CAEG,GAFH,CAAP;AAGH;;AArBa;;AAyBlB,MAAMC,WAAW,GAAG,IAAId,WAAJ,EAApB;AACA,eAAec,WAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nclass BaseService {\n    get(url, params = null) {\n        // if (params) {\n        //     url += (url.indexOf('?') === -1 ? '?' : '&') + this.queryParams(params);\n        // }\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Access-Control-Allow-Methods':'GET',\n                \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n    }\n\n    queryParams(params) {\n        return Object.keys(params)\n            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n            .join('&');\n    }\n\n}\n\nconst baseService = new BaseService();\nexport default baseService;\n"]},"metadata":{},"sourceType":"module"}